<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ProjectVersionDao">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.ProjectVersionEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_version" jdbcType="VARCHAR" property="projectVersion" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="commits" jdbcType="LONGVARCHAR" property="commits" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_project_version
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.ProjectVersionEntity">
    <selectKey  keyProperty="id" order="AFTER" resultType="int">
      select LAST_INSERT_ID()
    </selectKey>
    insert into sys_project_version (project_id, project_version,
      create_time, commits
      )
    values (#{projectId,jdbcType=INTEGER}, #{projectVersion,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{commits,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.ProjectVersionEntity">
    update sys_project_version
    set project_id = #{projectId,jdbcType=INTEGER},
      project_version = #{projectVersion,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      commits = #{commits,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, project_id, project_version, create_time, commits
    from sys_project_version
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByProjectId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, project_id, project_version, create_time, commits
    from sys_project_version
    where project_id = #{projectId,jdbcType=INTEGER}
    order by create_time desc
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, project_id, project_version, create_time, commits
    from sys_project_version
  </select>

  <select id="selectVByFuncIdAndProId" resultMap="BaseResultMap">
    select spv.*
    from sys_project_version spv
    inner join sys_project_procedure spp on spv.project_id = spp.project_id and spv.project_version = spp.project_version
    where spp.project_id = #{projectId} and spp.procedure_id = #{functionId}
  </select>
  <select id="selectMaxDate" resultType="java.util.Date">
    select max(create_time)
    from sys_project_version
    <where>
      <if test="projectId != 0">
        project_id = #{projectId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectByVersionAndId" resultMap="BaseResultMap">
    select id, project_id, project_version, create_time, commits
    from sys_project_version
    <where>
      <if test="projectId != 0">
        project_id = #{projectId,jdbcType=INTEGER} AND
      </if>
      <if test="projectVersion != ''">
        project_version = #{projectVersion,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
</mapper>
